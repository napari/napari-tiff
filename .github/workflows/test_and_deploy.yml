# This workflow:
# - runs tests on pull requests
# - runs tests on pushing to main
# - if it's a tag push and the tag starts with v, and if the tests pass,
#   deploys to PyPI using Trusted Publishers:
#   https://docs.pypi.org/trusted-publishers/
name: test-and-deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest, windows-latest, macos-latest]
        # test spec-0 earliest and latest Python versions
        # https://scientific-python.org/specs/spec-0000/
        python: ["3.10", "3.12"]

    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python ${{ matrix.python }}
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: ${{ matrix.python }}

      # these libraries enable testing Qt on Linux
      - uses: tlambert03/setup-qt-libs@19e4ef2d781d81f5f067182e228b54ec90d23b76 # v1.8

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install tox-gh-actions
          python -m pip install .[dev,testing]

      - name: Test with tox
        run: tox

      - name: Upload coverage data
        uses: actions/upload-artifact@ea165f8d65b6e75b540449e92b4886f43607fa02 # v4.6.2
        with:
          name: coverage reports ${{ matrix.platform }} py ${{ matrix.python }}
          include-hidden-files: true
          path: |
            ./.coverage.*

  upload_coverage:
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read    # Required for code checkout
    name: Upload coverage
    needs: [test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.x"
          cache-dependency-path: pyproject.toml
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install codecov

      - name: Download coverage data
        uses: actions/download-artifact@d3f86a106a0bac45b974a628896c90dbdf5c8093 # v4.3.0
        with:
          pattern: coverage reports*
          path: coverage
          merge-multiple: true

      - name: combine coverage data
        run: |
          python -Im coverage combine coverage
          python -Im coverage xml -o coverage.xml

          # Report and write to summary.
          python -Im coverage report --format=markdown --skip-empty --skip-covered >> "$GITHUB_STEP_SUMMARY"

      - name: Upload coverage data
        uses: codecov/codecov-action@18283e04ce6e62d37312384ff67231eb8fd56d24 # v5.4.3
        with:
          fail_ci_if_error: true
          use_oidc: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}

  deploy:
    needs: [test]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    permissions:
      id-token: write
      contents: write
    steps:
      - uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Python
        uses: actions/setup-python@a26af69be951a213d495a4c3e4e4022e16d87065 # v5.6.0
        with:
          python-version: "3.x"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install .[dev,testing]

      - name: Build
        run: |
          git tag
          python -m build

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@76f52bc884231f62b9a034ebfe128415bbaabdfc # v1.12.4

      - name: Publish to GitHub
        uses: softprops/action-gh-release@72f2c25fcb47643c292f7107632f7a47c1df5cd8 # v0.1.15
        with:
          tag_name: ${{ github.ref }}
          name: ${{ env.tag }}
          # body: add when we add release notes
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') }}
          files: |
            dist/*
