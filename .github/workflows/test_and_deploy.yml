# This workflow:
# - runs tests on pull requests
# - runs tests on pushing to main
# - if it's a tag push and the tag starts with v, and if the tests pass,
#   deploys to PyPI using Trusted Publishers:
#   https://docs.pypi.org/trusted-publishers/
name: test-and-deploy

on:
  push:
    branches:
      - main
    tags:
      - 'v*'
  pull_request:
    branches:
      - main
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  COLUMNS: 120
  FORCE_COLOR: 1


jobs:
  test:
    name: ${{ matrix.platform }} py${{ matrix.python }}
    runs-on: ${{ matrix.platform }}
    strategy:
      fail-fast: false
      matrix:
        platform: [ubuntu-latest]
        # test spec-0 earliest and latest Python versions
        # https://scientific-python.org/specs/spec-0000/
        python: ["3.10", "3.11", "3.12", "3.13"]
        include:
          - platform: macos-latest
            python: "3.12"
          - platform: windows-latest
            python: "3.11"


    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - name: Install the latest version of uv
        uses: astral-sh/setup-uv@85856786d1ce8acfbcc2f13a5f3fbd6b938f9f41
        with:
          version: "latest"
          python-version: ${{ matrix.python }}
          activate-environment: true

      - name: Setup headless display
        uses: pyvista/setup-headless-display-action@7d84ae825e6d9297a8e99bdbbae20d1b919a0b19 # v4.2
        with:
          qt: true
          wm: herbstluftwm

      - name: Install dependencies
        run: |
          uv sync --all-groups

      - name: Test with tox
        run: tox

      - name: Upload coverage data
        uses: actions/upload-artifact@330a01c490aca151604b8cf639adc76d48f6c5d4 # v5.0.0
        with:
          name: coverage reports ${{ matrix.platform }} py ${{ matrix.python }}
          include-hidden-files: true
          path: |
            ./.coverage.*

  upload_coverage:
    permissions:
      id-token: write  # Required for OIDC authentication
      contents: read    # Required for code checkout
    name: Upload coverage
    needs: [test]
    if: always()
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8 # v5.0.0

      - uses: actions/setup-python@e797f83bcb11b83ae66e0230d6156d7c80228e7c # v6.0.0
        with:
          python-version: "3.x"
          cache-dependency-path: pyproject.toml
          cache: 'pip'

      - name: Install Dependencies
        run: |
          pip install --upgrade pip
          pip install codecov

      - name: Download coverage data
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53 # v6.0.0
        with:
          pattern: coverage reports*
          path: coverage
          merge-multiple: true

      - name: combine coverage data
        run: |
          python -Im coverage combine coverage
          python -Im coverage xml -o coverage.xml

          # Report and write to summary.
          python -Im coverage report --format=markdown --skip-empty --skip-covered >> "$GITHUB_STEP_SUMMARY"

      - name: Upload coverage data
        uses: codecov/codecov-action@5a1091511ad55cbe89839c7260b706298ca349f7 # v5.5.1
        with:
          fail_ci_if_error: true
          use_oidc: ${{ github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.pull_request.head.repo.full_name == github.repository) }}

  build-and-inspect-package:
      name: Build & inspect package.
      runs-on: ubuntu-latest

      steps:
        - uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
        - uses: hynek/build-and-inspect-python-package@efb823f52190ad02594531168b7a2d5790e66516

  deploy:
    needs: [test, build-and-inspect-package]
    runs-on: ubuntu-latest
    if: contains(github.ref, 'tags')
    permissions:
      id-token: write
      contents: write
    steps:
      - name: Download built artifact to dist/
        uses: actions/download-artifact@018cc2cf5baa6db3ef3c5f8a56943fffe632ef53
        with:
          name: Packages
          path: dist

      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@ed0c53931b1dc9bd32cbe73a98c7f6766f8a527e # v1.13.0

      - name: Publish to GitHub
        uses: softprops/action-gh-release@6da8fa9354ddfdc4aeace5fc48d7f679b5214090 # v2.4.1
        with:
          tag_name: ${{ github.ref }}
          name: ${{ env.tag }}
          # body: add when we add release notes
          draft: false
          prerelease: ${{ contains(github.ref, 'rc') }}
          files: |
            dist/*
